<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.leaf.admin.sys.mapper.SysUserMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.leaf.admin.sys.entity.SysUser">
        <id column="id" property="id"/>
        <result column="org_id" property="orgId"/>
        <result column="username" property="username"/>
        <result column="nick_name" property="nickName"/>
        <result column="user_type" property="userType"/>
        <result column="email" property="email"/>
        <result column="mobile_phone" property="mobilePhone"/>
        <result column="gender" property="gender"/>
        <result column="avatar" property="avatar"/>
        <result column="password" property="password"/>
        <result column="status" property="status"/>
        <result column="del_flag" property="delFlag"/>
        <result column="login_ip" property="loginIp"/>
        <result column="login_time" property="loginTime"/>
        <result column="create_by" property="createBy"/>
        <result column="create_time" property="createTime"/>
        <result column="update_by" property="updateBy"/>
        <result column="update_time" property="updateTime"/>
        <result column="remark" property="remark"/>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id
        , org_id, username, nick_name, user_type, email, mobile_phone, gender, avatar, password, status, del_flag, login_ip, login_time, create_by, create_time, update_by, update_time, remark
    </sql>
    <!-- 通用查询映射结果 -->
<!--
    <resultMap id="SysUserVOResultMap" type="com.leaf.vo.SysUserVO">
        <id column="id" property="id"/>
        <result column="username" property="username"/>
        <result column="avatar" property="avatar"/>
        <result column="email" property="email"/>
        <result column="city" property="city"/>
        <result column="created" property="created"/>
        <result column="status" property="status"/>
        <result column="updated" property="updated"/>
        <result column="last_login" property="lastLogin"/>

        <collection property="roles" ofType="com.leaf.entity.SysRole">
            <id property="id" column="roleId"/>
            <result property="name" column="name"/>
        </collection>
    </resultMap>
-->


    <insert id="insertUserRole">
        insert into t_sys_user_role(user_id,role_id) values
        <foreach collection="roleIds" separator="," item="roleId">
            (#{userId},#{roleId})
        </foreach>
    </insert>
    <delete id="deleteUserRoleByUserIds">
        delete from t_sys_user_role where
        <foreach collection="userIds" open="user_id in (" close=")" item="roleId" separator=",">
            #{userId}
        </foreach>
    </delete>
    <select id="selectByRoleId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_sys_user
        where id in (select user_id from t_sys_user_role where role_id = #{roleId})
    </select>
    <!--<select id="selectUserList" resultMap="SysUserVOResultMap">
        SELECT
        u.id,
        u.username,
        u.password,
        u.avatar,
        u.email,
        u.city,
        u.created,
        u.updated,
        u.last_login,
        u.status,
        r.id roleId,
        r.name
        FROM
        t_sys_user u
        LEFT JOIN t_sys_user_role ur
        ON u.id = ur.user_id
        LEFT JOIN t_sys_role r
        ON ur.role_id = r.id
        where 1 = 1
        <if test="query.username != null and query.username != ''">
            and u.username like concat('%',#{query.username},'%')
        </if>
    </select>-->

</mapper>
